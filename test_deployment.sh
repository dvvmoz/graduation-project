#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –¥–ª—è –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è –Æ—Ä–ü–æ–º–æ—â–Ω–∏–∫–∞

set -euo pipefail

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# –§—É–Ω–∫—Ü–∏–∏ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
log() {
    echo -e "${GREEN}[$(date +'%Y-%m-%d %H:%M:%S')] $1${NC}"
}

warn() {
    echo -e "${YELLOW}[WARNING] $1${NC}"
}

error() {
    echo -e "${RED}[ERROR] $1${NC}"
    exit 1
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
check_dependencies() {
    log "–ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏..."
    
    if ! command -v docker &> /dev/null; then
        error "Docker –Ω–µ –Ω–∞–π–¥–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Docker –∏ –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É."
    fi
    
    if ! command -v docker-compose &> /dev/null; then
        error "Docker Compose –Ω–µ –Ω–∞–π–¥–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Docker Compose –∏ –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É."
    fi
    
    log "–ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –ø—Ä–æ–≤–µ—Ä–µ–Ω—ã ‚úì"
}

# –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ —Ç–µ—Å—Ç–æ–≤–æ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
prepare_test_config() {
    log "–ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º —Ç–µ—Å—Ç–æ–≤—É—é –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é..."
    
    # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—É—é –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç
    if [[ ! -f env.test.example ]]; then
        warn "–§–∞–π–ª env.test.example –Ω–µ –Ω–∞–π–¥–µ–Ω. –°–æ–∑–¥–∞–µ–º..."
        cat > env.test.example << EOF
TELEGRAM_TOKEN=test_token
OPENAI_API_KEY=test_key
SECRET_KEY=test_secret_key_for_local_development_only_32chars
ADMIN_PASSWORD=test_admin
GRAFANA_PASSWORD=test_grafana
CHROMA_DB_PATH=/app/db/chroma
LOG_LEVEL=INFO
MAX_TOKENS=2000
BACKUP_SCHEDULE=0 2 * * *
BACKUP_RETENTION_DAYS=7
ALLOWED_HOSTS=localhost,127.0.0.1
CORS_ORIGINS=http://localhost,https://localhost
EOF
    fi
    
    # –°–æ–∑–¥–∞–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
    mkdir -p logs/nginx data nginx
    
    log "–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –ø–æ–¥–≥–æ—Ç–æ–≤–ª–µ–Ω–∞ ‚úì"
}

# –û—á–∏—Å—Ç–∫–∞ —Å—Ç–∞—Ä—ã—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
cleanup_old_containers() {
    log "–û—á–∏—â–∞–µ–º —Å—Ç–∞—Ä—ã–µ —Ç–µ—Å—Ç–æ–≤—ã–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã..."
    
    docker-compose -f docker-compose.test.yml down --volumes --remove-orphans 2>/dev/null || true
    
    # –£–¥–∞–ª—è–µ–º –Ω–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º—ã–µ –æ–±—Ä–∞–∑—ã
    docker system prune -f >/dev/null 2>&1 || true
    
    log "–û—á–∏—Å—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ ‚úì"
}

# –°–±–æ—Ä–∫–∞ –∏ –∑–∞–ø—É—Å–∫ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
build_and_run() {
    log "–°–æ–±–∏—Ä–∞–µ–º –∏ –∑–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã..."
    
    # –°–±–æ—Ä–∫–∞ –æ–±—Ä–∞–∑–æ–≤
    log "–°–±–æ—Ä–∫–∞ –æ–±—Ä–∞–∑–æ–≤..."
    docker-compose -f docker-compose.test.yml build --no-cache
    
    # –ó–∞–ø—É—Å–∫ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
    log "–ó–∞–ø—É—Å–∫ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤..."
    docker-compose -f docker-compose.test.yml up -d
    
    log "–ö–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –∑–∞–ø—É—â–µ–Ω—ã ‚úì"
}

# –û–∂–∏–¥–∞–Ω–∏–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ —Å–µ—Ä–≤–∏—Å–æ–≤
wait_for_services() {
    log "–û–∂–∏–¥–∞–µ–º –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ —Å–µ—Ä–≤–∏—Å–æ–≤..."
    
    local max_attempts=30
    local attempt=1
    
    while [[ $attempt -le $max_attempts ]]; do
        if docker-compose -f docker-compose.test.yml ps | grep -q "Up"; then
            log "–°–µ—Ä–≤–∏—Å—ã –≥–æ—Ç–æ–≤—ã ‚úì"
            return 0
        fi
        
        log "–ü–æ–ø—ã—Ç–∫–∞ $attempt/$max_attempts - –æ–∂–∏–¥–∞–µ–º..."
        sleep 5
        ((attempt++))
    done
    
    error "–°–µ—Ä–≤–∏—Å—ã –Ω–µ –≥–æ—Ç–æ–≤—ã –ø–æ—Å–ª–µ $max_attempts –ø–æ–ø—ã—Ç–æ–∫"
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
check_container_status() {
    log "–ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤..."
    
    echo -e "${BLUE}–°—Ç–∞—Ç—É—Å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤:${NC}"
    docker-compose -f docker-compose.test.yml ps
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–∂–¥—ã–π –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
    local containers=("legal-bot-test" "legal-bot-redis-test" "legal-bot-nginx-test")
    
    for container in "${containers[@]}"; do
        if docker ps --format "table {{.Names}}\t{{.Status}}" | grep -q "$container.*Up"; then
            log "‚úì $container —Ä–∞–±–æ—Ç–∞–µ—Ç"
        else
            warn "‚úó $container –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç"
        fi
    done
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ —Å–µ—Ä–≤–∏—Å–æ–≤
test_service_availability() {
    log "–ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å —Å–µ—Ä–≤–∏—Å–æ–≤..."
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º Nginx
    if curl -f -s http://localhost/ > /dev/null; then
        log "‚úì Nginx –¥–æ—Å—Ç—É–ø–µ–Ω (http://localhost/)"
    else
        warn "‚úó Nginx –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"
    fi
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º Redis
    if docker exec legal-bot-redis-test redis-cli ping | grep -q "PONG"; then
        log "‚úì Redis –¥–æ—Å—Ç—É–ø–µ–Ω"
    else
        warn "‚úó Redis –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"
    fi
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Å–Ω–æ–≤–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ (–µ—Å–ª–∏ –µ—Å—Ç—å health endpoint)
    if curl -f -s http://localhost:5000/health > /dev/null 2>&1; then
        log "‚úì –û—Å–Ω–æ–≤–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–æ—Å—Ç—É–ø–Ω–æ"
    else
        warn "‚úó –û—Å–Ω–æ–≤–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ"
    fi
}

# –ü–æ–∫–∞–∑ –ª–æ–≥–æ–≤
show_logs() {
    log "–ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ª–æ–≥–∏ —Å–µ—Ä–≤–∏—Å–æ–≤..."
    
    echo -e "${BLUE}–ü–æ—Å–ª–µ–¥–Ω–∏–µ –ª–æ–≥–∏:${NC}"
    docker-compose -f docker-compose.test.yml logs --tail=10
}

# –ü–æ–∫–∞–∑ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Ç–µ—Å—Ç–æ–≤–æ–º —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–∏
show_test_info() {
    log "üéâ –¢–µ—Å—Ç–æ–≤–æ–µ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!"
    echo
    echo -e "${BLUE}üìä –î–æ—Å—Ç—É–ø–Ω—ã–µ —Å–µ—Ä–≤–∏—Å—ã:${NC}"
    echo "‚Ä¢ –û—Å–Ω–æ–≤–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ: http://localhost:5000/"
    echo "‚Ä¢ Nginx: http://localhost/"
    echo "‚Ä¢ Redis: localhost:6379"
    echo
    echo -e "${BLUE}üìã –ü–æ–ª–µ–∑–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:${NC}"
    echo "‚Ä¢ –ü—Ä–æ—Å–º–æ—Ç—Ä –ª–æ–≥–æ–≤: docker-compose -f docker-compose.test.yml logs -f"
    echo "‚Ä¢ –û—Å—Ç–∞–Ω–æ–≤–∫–∞: docker-compose -f docker-compose.test.yml down"
    echo "‚Ä¢ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫: docker-compose -f docker-compose.test.yml restart"
    echo "‚Ä¢ –°—Ç–∞—Ç—É—Å: docker-compose -f docker-compose.test.yml ps"
    echo
    echo -e "${BLUE}üîß –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ:${NC}"
    echo "‚Ä¢ –ü—Ä–æ–≤–µ—Ä–∫–∞ Nginx: curl http://localhost/"
    echo "‚Ä¢ –ü—Ä–æ–≤–µ—Ä–∫–∞ Redis: docker exec legal-bot-redis-test redis-cli ping"
    echo "‚Ä¢ –õ–æ–≥–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è: docker-compose -f docker-compose.test.yml logs legal-bot"
}

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
main() {
    log "üß™ –ù–∞—á–∏–Ω–∞–µ–º –ª–æ–∫–∞–ª—å–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è –Æ—Ä–ü–æ–º–æ—â–Ω–∏–∫–∞"
    
    check_dependencies
    prepare_test_config
    cleanup_old_containers
    build_and_run
    wait_for_services
    check_container_status
    test_service_availability
    show_logs
    show_test_info
    
    log "‚úÖ –õ–æ–∫–∞–ª—å–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!"
}

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫
trap 'error "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –≤ —Å—Ç—Ä–æ–∫–µ $LINENO"' ERR

# –ó–∞–ø—É—Å–∫
main "$@" 