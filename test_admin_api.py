#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ API –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏.
"""
import requests
import json
import time
import os

def test_admin_api():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç API –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏."""
    base_url = "http://127.0.0.1:5000"
    
    # –°–æ–∑–¥–∞–µ–º —Å–µ—Å—Å–∏—é –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è cookies
    session = requests.Session()
    
    # –û—Ç–∫–ª—é—á–∞–µ–º –ø—Ä–æ–∫—Å–∏ –¥–ª—è –ª–æ–∫–∞–ª—å–Ω—ã—Ö –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–π
    session.proxies = {
        'http': None,
        'https': None
    }
    
    # –û—Ç–∫–ª—é—á–∞–µ–º –ø—Ä–æ–∫—Å–∏ –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
    os.environ['HTTP_PROXY'] = ''
    os.environ['HTTPS_PROXY'] = ''
    os.environ['http_proxy'] = ''
    os.environ['https_proxy'] = ''
    
    print("1. –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏...")
    print(f"   URL: {base_url}")
    try:
        response = session.get(f"{base_url}/", timeout=10)
        print(f"   –°—Ç–∞—Ç—É—Å: {response.status_code}")
        if response.status_code in [200, 302]:  # 302 - —Ä–µ–¥–∏—Ä–µ–∫—Ç –Ω–∞ login
            print("   ‚úÖ –ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å –¥–æ—Å—Ç—É–ø–Ω–∞")
        else:
            print("   ‚ùå –ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞")
            return False
    except requests.exceptions.RequestException as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: {e}")
        return False
    
    print("\n2. –ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è...")
    try:
        login_data = {
            "username": "admin",
            "password": "admin123"
        }
        
        response = session.post(
            f"{base_url}/login",
            json=login_data,
            headers={"Content-Type": "application/json"},
            timeout=10
        )
        
        print(f"   –°—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞: {response.status_code}")
        if response.status_code == 200:
            result = response.json()
            if result.get('success'):
                print("   ‚úÖ –ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞")
            else:
                print("   ‚ùå –ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è –Ω–µ —É–¥–∞–ª–∞—Å—å")
                print(f"   –û—Ç–≤–µ—Ç: {result}")
                return False
        else:
            print(f"   ‚ùå –û—à–∏–±–∫–∞ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏: {response.status_code}")
            print(f"   –û—Ç–≤–µ—Ç: {response.text}")
            return False
            
    except requests.exceptions.RequestException as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏: {e}")
        return False
    
    print("\n3. –ó–∞–ø—É—Å–∫ –∫–æ–º–∞–Ω–¥—ã test_demo...")
    try:
        command_data = {
            "command": "test_demo"
        }
        
        response = session.post(
            f"{base_url}/api/execute",
            json=command_data,
            headers={"Content-Type": "application/json"},
            timeout=10
        )
        
        print(f"   –°—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞: {response.status_code}")
        if response.status_code == 200:
            result = response.json()
            if result.get('success'):
                process_id = result.get('process_id')
                print(f"   ‚úÖ –ö–æ–º–∞–Ω–¥–∞ –∑–∞–ø—É—â–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ. Process ID: {process_id}")
                
                # –ñ–¥–µ–º –Ω–µ–∫–æ—Ç–æ—Ä–æ–µ –≤—Ä–µ–º—è –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è
                print("   ‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è...")
                time.sleep(8)  # –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º –≤—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –ø—Ä–æ—Ü–µ—Å—Å–∞
                status_response = session.get(f"{base_url}/api/processes/{process_id}", timeout=10)
                if status_response.status_code == 200:
                    status_result = status_response.json()
                    print(f"   üìä –°—Ç–∞—Ç—É—Å –ø—Ä–æ—Ü–µ—Å—Å–∞: {status_result.get('status')}")
                    
                    if status_result.get('stdout'):
                        print("   üìù –í—ã–≤–æ–¥ –∫–æ–º–∞–Ω–¥—ã:")
                        print(status_result.get('stdout')[:500] + "..." if len(status_result.get('stdout')) > 500 else status_result.get('stdout'))
                    
                    if status_result.get('stderr'):
                        print("   ‚ö†Ô∏è –û—à–∏–±–∫–∏:")
                        print(status_result.get('stderr'))
                        
                    return status_result.get('status') == 'completed' and status_result.get('returncode') == 0
                else:
                    print(f"   ‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞: {status_response.status_code}")
                    return False
            else:
                print(f"   ‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ –∫–æ–º–∞–Ω–¥—ã: {result.get('error')}")
                return False
        else:
            print(f"   ‚ùå –û—à–∏–±–∫–∞ API: {response.status_code}")
            print(f"   –û—Ç–≤–µ—Ç: {response.text}")
            return False
            
    except requests.exceptions.RequestException as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∫–æ–º–∞–Ω–¥—ã: {e}")
        return False

if __name__ == "__main__":
    print("üß™ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï API –ê–î–ú–ò–ù-–ü–ê–ù–ï–õ–ò")
    print("=" * 50)
    
    success = test_admin_api()
    
    print("\n" + "=" * 50)
    if success:
        print("üéâ –¢–ï–°–¢ –£–°–ü–ï–®–ù–û –ü–†–û–ô–î–ï–ù!")
    else:
        print("‚ùå –¢–ï–°–¢ –ù–ï –ü–†–û–ô–î–ï–ù!") 