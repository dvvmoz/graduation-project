#!/usr/bin/env python3
"""
–ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤–µ–±-—Å–∫—Ä–∞–ø–µ—Ä–∞ –¥–ª—è –±–µ–ª–æ—Ä—É—Å—Å–∫–∏—Ö —é—Ä–∏–¥–∏—á–µ—Å–∫–∏—Ö —Å–∞–π—Ç–æ–≤
"""

import sys
import os
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º –∫–æ—Ä–Ω–µ–≤—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –ø—Ä–æ–µ–∫—Ç–∞ –≤ –ø—É—Ç—å
sys.path.append(str(Path(__file__).parent.parent))

from modules.web_scraper import create_scraper_from_config


def scrape_belarus_government_sites():
    """–°–∫—Ä–∞–ø–∏–Ω–≥ –æ—Å–Ω–æ–≤–Ω—ã—Ö –≥–æ—Å—É–¥–∞—Ä—Å—Ç–≤–µ–Ω–Ω—ã—Ö —Å–∞–π—Ç–æ–≤ –ë–µ–ª–∞—Ä—É—Å–∏"""
    print("üáßüáæ –°–∫—Ä–∞–ø–∏–Ω–≥ –≥–æ—Å—É–¥–∞—Ä—Å—Ç–≤–µ–Ω–Ω—ã—Ö —Å–∞–π—Ç–æ–≤ –ë–µ–ª–∞—Ä—É—Å–∏")
    
    # –û—Å–Ω–æ–≤–Ω—ã–µ –≥–æ—Å—É–¥–∞—Ä—Å—Ç–≤–µ–Ω–Ω—ã–µ –ø–æ—Ä—Ç–∞–ª—ã –†–ë
    belarus_gov_sites = [
        "https://pravo.by/",                    # –ù–∞—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π –ø—Ä–∞–≤–æ–≤–æ–π –ø–æ—Ä—Ç–∞–ª
        "https://www.government.by/",           # –°–æ–≤–µ—Ç –ú–∏–Ω–∏—Å—Ç—Ä–æ–≤
        "https://www.house.gov.by/",            # –ü–∞–ª–∞—Ç–∞ –ø—Ä–µ–¥—Å—Ç–∞–≤–∏—Ç–µ–ª–µ–π
        "https://www.court.gov.by/",            # –°—É–¥–µ–±–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞
        "https://www.minjust.gov.by/"           # –ú–∏–Ω–∏—Å—Ç–µ—Ä—Å—Ç–≤–æ —é—Å—Ç–∏—Ü–∏–∏
    ]
    
    scraper = create_scraper_from_config()
    total_pages = 0
    total_chunks = 0
    
    for i, site in enumerate(belarus_gov_sites, 1):
        print(f"\nüìã –°–∞–π—Ç {i}/{len(belarus_gov_sites)}: {site}")
        
        result = scraper.scrape_and_add(site, max_pages=5)
        
        if result['success']:
            total_pages += result['pages_scraped']
            total_chunks += result['chunks_added']
            print(f"‚úÖ {result['pages_scraped']} —Å—Ç—Ä–∞–Ω–∏—Ü, {result['chunks_added']} —á–∞–Ω–∫–æ–≤")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞: {result['message']}")
    
    print(f"\nüéâ –†–µ–∑—É–ª—å—Ç–∞—Ç —Å–∫—Ä–∞–ø–∏–Ω–≥–∞ –≥–æ—Å—É–¥–∞—Ä—Å—Ç–≤–µ–Ω–Ω—ã—Ö —Å–∞–π—Ç–æ–≤ –†–ë:")
    print(f"üìÑ –í—Å–µ–≥–æ —Å—Ç—Ä–∞–Ω–∏—Ü: {total_pages}")
    print(f"üìù –í—Å–µ–≥–æ —á–∞–Ω–∫–æ–≤: {total_chunks}")
    
    return total_pages, total_chunks


def scrape_belarus_legal_resources():
    """–°–∫—Ä–∞–ø–∏–Ω–≥ –ø—Ä–∞–≤–æ–≤—ã—Ö —Ä–µ—Å—É—Ä—Å–æ–≤ –∏ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–æ–Ω–Ω—ã—Ö —Å–∞–π—Ç–æ–≤"""
    print("\n‚öñÔ∏è –°–∫—Ä–∞–ø–∏–Ω–≥ –ø—Ä–∞–≤–æ–≤—ã—Ö —Ä–µ—Å—É—Ä—Å–æ–≤ –ë–µ–ª–∞—Ä—É—Å–∏")
    
    # –ü—Ä–∞–≤–æ–≤—ã–µ —Ä–µ—Å—É—Ä—Å—ã –∏ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏
    belarus_legal_sites = [
        "https://www.lawbelarus.com/",          # –ü—Ä–∞–≤–æ –ë–µ–ª–∞—Ä—É—Å–∏
        "https://www.jurist.by/",               # –Æ—Ä–∏—Å—Ç.–±–∞–π
        "https://www.notariat.by/",             # –ë–µ–ª–æ—Ä—É—Å—Å–∫–∏–π –Ω–æ—Ç–∞—Ä–∏–∞—Ç
        "https://www.normativka.by/"            # –ù–æ—Ä–º–∞—Ç–∏–≤–Ω—ã–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã
    ]
    
    scraper = create_scraper_from_config()
    total_pages = 0
    total_chunks = 0
    
    for i, site in enumerate(belarus_legal_sites, 1):
        print(f"\nüìã –°–∞–π—Ç {i}/{len(belarus_legal_sites)}: {site}")
        
        result = scraper.scrape_and_add(site, max_pages=3)
        
        if result['success']:
            total_pages += result['pages_scraped']
            total_chunks += result['chunks_added']
            print(f"‚úÖ {result['pages_scraped']} —Å—Ç—Ä–∞–Ω–∏—Ü, {result['chunks_added']} —á–∞–Ω–∫–æ–≤")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞: {result['message']}")
    
    print(f"\nüéâ –†–µ–∑—É–ª—å—Ç–∞—Ç —Å–∫—Ä–∞–ø–∏–Ω–≥–∞ –ø—Ä–∞–≤–æ–≤—ã—Ö —Ä–µ—Å—É—Ä—Å–æ–≤ –†–ë:")
    print(f"üìÑ –í—Å–µ–≥–æ —Å—Ç—Ä–∞–Ω–∏—Ü: {total_pages}")
    print(f"üìù –í—Å–µ–≥–æ —á–∞–Ω–∫–æ–≤: {total_chunks}")
    
    return total_pages, total_chunks


def scrape_regional_sites():
    """–°–∫—Ä–∞–ø–∏–Ω–≥ —Ä–µ–≥–∏–æ–Ω–∞–ª—å–Ω—ã—Ö –∏—Å–ø–æ–ª–∫–æ–º–æ–≤"""
    print("\nüèõÔ∏è –°–∫—Ä–∞–ø–∏–Ω–≥ —Ä–µ–≥–∏–æ–Ω–∞–ª—å–Ω—ã—Ö –∏—Å–ø–æ–ª–∫–æ–º–æ–≤")
    
    # –†–µ–≥–∏–æ–Ω–∞–ª—å–Ω—ã–µ –∏—Å–ø–æ–ª–∫–æ–º—ã
    regional_sites = [
        "https://minsk.gov.by/",                # –ú–∏–Ω–≥–æ—Ä–∏—Å–ø–æ–ª–∫–æ–º
        "https://www.gomel.gov.by/",            # –ì–æ–º–µ–ª—å—Å–∫–∏–π –æ–±–ª–∏—Å–ø–æ–ª–∫–æ–º
        "https://www.vitebsk.gov.by/",          # –í–∏—Ç–µ–±—Å–∫–∏–π –æ–±–ª–∏—Å–ø–æ–ª–∫–æ–º
        "https://www.grodno.gov.by/"            # –ì—Ä–æ–¥–Ω–µ–Ω—Å–∫–∏–π –æ–±–ª–∏—Å–ø–æ–ª–∫–æ–º
    ]
    
    scraper = create_scraper_from_config()
    total_pages = 0
    total_chunks = 0
    
    for i, site in enumerate(regional_sites, 1):
        print(f"\nüìã –°–∞–π—Ç {i}/{len(regional_sites)}: {site}")
        
        result = scraper.scrape_and_add(site, max_pages=2)
        
        if result['success']:
            total_pages += result['pages_scraped']
            total_chunks += result['chunks_added']
            print(f"‚úÖ {result['pages_scraped']} —Å—Ç—Ä–∞–Ω–∏—Ü, {result['chunks_added']} —á–∞–Ω–∫–æ–≤")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞: {result['message']}")
    
    print(f"\nüéâ –†–µ–∑—É–ª—å—Ç–∞—Ç —Å–∫—Ä–∞–ø–∏–Ω–≥–∞ —Ä–µ–≥–∏–æ–Ω–∞–ª—å–Ω—ã—Ö —Å–∞–π—Ç–æ–≤:")
    print(f"üìÑ –í—Å–µ–≥–æ —Å—Ç—Ä–∞–Ω–∏—Ü: {total_pages}")
    print(f"üìù –í—Å–µ–≥–æ —á–∞–Ω–∫–æ–≤: {total_chunks}")
    
    return total_pages, total_chunks


def scrape_pravo_by_focused():
    """–§–æ–∫—É—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Å–∫—Ä–∞–ø–∏–Ω–≥ pravo.by"""
    print("\nüéØ –§–æ–∫—É—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Å–∫—Ä–∞–ø–∏–Ω–≥ pravo.by")
    
    scraper = create_scraper_from_config()
    
    # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º —Å–∫—Ä–∞–ø–µ—Ä –¥–ª—è –±–æ–ª–µ–µ –¥–µ—Ç–∞–ª—å–Ω–æ–≥–æ –∏–∑—É—á–µ–Ω–∏—è
    scraper.max_pages = 30
    scraper.delay = 2  # –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º –∑–∞–¥–µ—Ä–∂–∫—É –¥–ª—è –≤–µ–∂–ª–∏–≤–æ–≥–æ —Å–∫—Ä–∞–ø–∏–Ω–≥–∞
    
    result = scraper.scrape_and_add("https://pravo.by/", max_pages=30)
    
    if result['success']:
        print(f"‚úÖ –î–µ—Ç–∞–ª—å–Ω—ã–π —Å–∫—Ä–∞–ø–∏–Ω–≥ pravo.by –∑–∞–≤–µ—Ä—à–µ–Ω")
        print(f"üìÑ –û–±—Ä–∞–±–æ—Ç–∞–Ω–æ —Å—Ç—Ä–∞–Ω–∏—Ü: {result['pages_scraped']}")
        print(f"üìù –î–æ–±–∞–≤–ª–µ–Ω–æ —á–∞–Ω–∫–æ–≤: {result['chunks_added']}")
        print(f"üåê –ò—Å—Ç–æ—á–Ω–∏–∫: {result['start_url']}")
    else:
        print(f"‚ùå –û—à–∏–±–∫–∞: {result['message']}")
    
    return result.get('pages_scraped', 0), result.get('chunks_added', 0)


def check_knowledge_base_stats():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –±–∞–∑—ã –∑–Ω–∞–Ω–∏–π –ø–æ—Å–ª–µ —Å–∫—Ä–∞–ø–∏–Ω–≥–∞"""
    print("\nüìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –±–∞–∑—ã –∑–Ω–∞–Ω–∏–π")
    
    from modules.knowledge_base import get_knowledge_base
    
    kb = get_knowledge_base()
    stats = kb.get_collection_stats()
    
    print(f"üìö –í—Å–µ–≥–æ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –≤ –±–∞–∑–µ: {stats.get('total_documents', 0)}")
    print(f"üóÇÔ∏è –ö–æ–ª–ª–µ–∫—Ü–∏—è: {stats.get('collection_name', 'N/A')}")
    print(f"üíæ –ü—É—Ç—å –∫ –ë–î: {stats.get('db_path', 'N/A')}")
    
    return stats


def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Å –ø—Ä–∏–º–µ—Ä–∞–º–∏ —Å–∫—Ä–∞–ø–∏–Ω–≥–∞ –¥–ª—è –ë–µ–ª–∞—Ä—É—Å–∏"""
    print("üöÄ –ü—Ä–∏–º–µ—Ä—ã —Å–∫—Ä–∞–ø–∏–Ω–≥–∞ –±–µ–ª–æ—Ä—É—Å—Å–∫–∏—Ö —é—Ä–∏–¥–∏—á–µ—Å–∫–∏—Ö —Å–∞–π—Ç–æ–≤")
    print("=" * 60)
    
    total_pages_all = 0
    total_chunks_all = 0
    
    try:
        # 1. –°–∫—Ä–∞–ø–∏–Ω–≥ –≥–æ—Å—É–¥–∞—Ä—Å—Ç–≤–µ–Ω–Ω—ã—Ö —Å–∞–π—Ç–æ–≤
        pages, chunks = scrape_belarus_government_sites()
        total_pages_all += pages
        total_chunks_all += chunks
        
        # 2. –°–∫—Ä–∞–ø–∏–Ω–≥ –ø—Ä–∞–≤–æ–≤—ã—Ö —Ä–µ—Å—É—Ä—Å–æ–≤
        pages, chunks = scrape_belarus_legal_resources()
        total_pages_all += pages
        total_chunks_all += chunks
        
        # 3. –°–∫—Ä–∞–ø–∏–Ω–≥ —Ä–µ–≥–∏–æ–Ω–∞–ª—å–Ω—ã—Ö —Å–∞–π—Ç–æ–≤
        pages, chunks = scrape_regional_sites()
        total_pages_all += pages
        total_chunks_all += chunks
        
        # 4. –î–µ—Ç–∞–ª—å–Ω—ã–π —Å–∫—Ä–∞–ø–∏–Ω–≥ pravo.by
        pages, chunks = scrape_pravo_by_focused()
        total_pages_all += pages
        total_chunks_all += chunks
        
        # 5. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
        stats = check_knowledge_base_stats()
        
        print(f"\nüéâ –ò–¢–û–ì–û–í–ê–Ø –°–¢–ê–¢–ò–°–¢–ò–ö–ê:")
        print(f"üìÑ –í—Å–µ–≥–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ —Å—Ç—Ä–∞–Ω–∏—Ü: {total_pages_all}")
        print(f"üìù –í—Å–µ–≥–æ –¥–æ–±–∞–≤–ª–µ–Ω–æ —á–∞–Ω–∫–æ–≤: {total_chunks_all}")
        print(f"üìö –î–æ–∫—É–º–µ–Ω—Ç–æ–≤ –≤ –±–∞–∑–µ: {stats.get('total_documents', 0)}")
        
        print(f"\n‚úÖ –°–∫—Ä–∞–ø–∏–Ω–≥ –±–µ–ª–æ—Ä—É—Å—Å–∫–∏—Ö —Å–∞–π—Ç–æ–≤ –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ!")
        print(f"üáßüáæ –ë–∞–∑–∞ –∑–Ω–∞–Ω–∏–π –ø–æ–ø–æ–ª–Ω–µ–Ω–∞ –±–µ–ª–æ—Ä—É—Å—Å–∫–æ–π –ø—Ä–∞–≤–æ–≤–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π")
        
    except Exception as e:
        print(f"\n‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ —Å–∫—Ä–∞–ø–∏–Ω–≥–∞: {e}")
        print("üí° –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ:")
        print("   - –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã –≤—Å–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏")
        print("   - –ù–∞—Å—Ç—Ä–æ–µ–Ω —Ñ–∞–π–ª .env")
        print("   - –ï—Å—Ç—å –¥–æ—Å—Ç—É–ø –∫ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç—É")
        print("   - –°–∞–π—Ç—ã –¥–æ—Å—Ç—É–ø–Ω—ã")


if __name__ == "__main__":
    main() 