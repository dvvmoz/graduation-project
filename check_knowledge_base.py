#!/usr/bin/env python3
"""
–ë—ã—Å—Ç—Ä–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è –±–∞–∑—ã –∑–Ω–∞–Ω–∏–π
"""

import sys
import os
from pathlib import Path
from datetime import datetime

# –î–æ–±–∞–≤–ª—è–µ–º –∫–æ—Ä–Ω–µ–≤—É—é –ø–∞–ø–∫—É –ø—Ä–æ–µ–∫—Ç–∞ –≤ sys.path
project_root = Path(__file__).parent
sys.path.insert(0, str(project_root))

def check_knowledge_base_quick():
    """–ë—ã—Å—Ç—Ä–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è –±–∞–∑—ã –∑–Ω–∞–Ω–∏–π"""
    try:
        from modules.knowledge_base import get_knowledge_base
        
        print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–∞–∑—ã –∑–Ω–∞–Ω–∏–π...")
        print(f"üìÖ –í—Ä–µ–º—è –ø—Ä–æ–≤–µ—Ä–∫–∏: {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}")
        print("-" * 50)
        
        # –ü–æ–ª—É—á–∞–µ–º –±–∞–∑—É –∑–Ω–∞–Ω–∏–π
        kb = get_knowledge_base()
        stats = kb.get_collection_stats()
        
        # –û—Å–Ω–æ–≤–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
        print(f"üìÇ –ü—É—Ç—å –∫ –±–∞–∑–µ: {stats.get('db_path', '–Ω–µ —É–∫–∞–∑–∞–Ω')}")
        print(f"üìö –ö–æ–ª–ª–µ–∫—Ü–∏—è: {stats.get('collection_name', '–Ω–µ —É–∫–∞–∑–∞–Ω–∞')}")
        print(f"üìù –í—Å–µ–≥–æ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤: {stats.get('total_documents', 0)}")
        
        # –û—Ü–µ–Ω–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è
        doc_count = stats.get('total_documents', 0)
        if doc_count == 0:
            print("‚ùå –ë–∞–∑–∞ –∑–Ω–∞–Ω–∏–π –ø—É—Å—Ç–∞!")
            print("üí° –ó–∞–ø—É—Å—Ç–∏—Ç–µ: python scripts/populate_db.py")
            return False
        elif doc_count < 50:
            print("‚ö†Ô∏è –ú–∞–ª–æ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –≤ –±–∞–∑–µ")
            print("üí° –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –¥–æ–±–∞–≤–∏—Ç—å –±–æ–ª—å—à–µ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤")
        elif doc_count < 200:
            print("‚úÖ –£–º–µ—Ä–µ–Ω–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤")
        else:
            print("üéâ –û—Ç–ª–∏—á–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤!")
        
        # –¢–µ—Å—Ç –ø–æ–∏—Å–∫–∞
        print("\nüîç –¢–µ—Å—Ç –ø–æ–∏—Å–∫–∞...")
        test_queries = ["—Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ò–ü", "–Ω–∞–ª–æ–≥–∏", "—Ç—Ä—É–¥–æ–≤—ã–µ –æ—Ç–Ω–æ—à–µ–Ω–∏—è"]
        
        for query in test_queries:
            results = kb.search_relevant_docs(query, n_results=1)
            if results:
                distance = results[0].get('distance', 1.0)
                if distance < 0.3:
                    quality = "–æ—Ç–ª–∏—á–Ω–æ–µ"
                elif distance < 0.5:
                    quality = "—Ö–æ—Ä–æ—à–µ–µ"
                elif distance < 0.8:
                    quality = "—É–¥–æ–≤–ª–µ—Ç–≤–æ—Ä–∏—Ç–µ–ª—å–Ω–æ–µ"
                else:
                    quality = "–Ω–∏–∑–∫–æ–µ"
                print(f"  '{query}': {quality} –∫–∞—á–µ—Å—Ç–≤–æ ({distance:.3f})")
            else:
                print(f"  '{query}': –Ω–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤")
        
        print("\n" + "=" * 50)
        print("‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –±–∞–∑—ã –∑–Ω–∞–Ω–∏–π: {e}")
        return False

def check_files_structure():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã —Ñ–∞–π–ª–æ–≤"""
    print("\nüìÅ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã —Ñ–∞–π–ª–æ–≤...")
    
    required_files = [
        "modules/knowledge_base.py",
        "modules/bot_handler.py",
        "config.py",
        "scripts/populate_db.py",
        "scripts/update_documents.py",
        "scripts/scrape_websites.py",
        "data/legal_sites.txt"
    ]
    
    missing_files = []
    for file_path in required_files:
        if not os.path.exists(file_path):
            missing_files.append(file_path)
            print(f"‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç: {file_path}")
        else:
            print(f"‚úÖ –ù–∞–π–¥–µ–Ω: {file_path}")
    
    if missing_files:
        print(f"\n‚ö†Ô∏è –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç —Ñ–∞–π–ª–æ–≤: {len(missing_files)}")
        return False
    else:
        print("\n‚úÖ –í—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ —Ñ–∞–π–ª—ã –Ω–∞–π–¥–µ–Ω—ã!")
        return True

def check_documents_directory():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–∞–ø–∫–∏ —Å –¥–æ–∫—É–º–µ–Ω—Ç–∞–º–∏"""
    print("\nüìÑ –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–∞–ø–∫–∏ —Å –¥–æ–∫—É–º–µ–Ω—Ç–∞–º–∏...")
    
    docs_dir = Path("data/documents")
    if not docs_dir.exists():
        print("‚ùå –ü–∞–ø–∫–∞ data/documents –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
        return False
    
    # –ü–æ–¥—Å—á–µ—Ç –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –ø–æ —Ç–∏–ø–∞–º
    pdf_files = list(docs_dir.glob("*.pdf"))
    docx_files = list(docs_dir.glob("*.docx"))
    doc_files = list(docs_dir.glob("*.doc"))
    
    print(f"üìÑ PDF —Ñ–∞–π–ª–æ–≤: {len(pdf_files)}")
    print(f"üìÑ DOCX —Ñ–∞–π–ª–æ–≤: {len(docx_files)}")
    print(f"üìÑ DOC —Ñ–∞–π–ª–æ–≤: {len(doc_files)}")
    
    total_docs = len(pdf_files) + len(docx_files) + len(doc_files)
    print(f"üìä –í—Å–µ–≥–æ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤: {total_docs}")
    
    if total_docs == 0:
        print("‚ö†Ô∏è –ù–µ—Ç –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏")
        print("üí° –î–æ–±–∞–≤—å—Ç–µ PDF, DOCX –∏–ª–∏ DOC —Ñ–∞–π–ª—ã –≤ –ø–∞–ø–∫—É data/documents/")
        return False
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 5 —Ñ–∞–π–ª–æ–≤
    all_files = pdf_files + docx_files + doc_files
    print("üìã –î–æ–∫—É–º–µ–Ω—Ç—ã:")
    for i, file in enumerate(all_files[:5]):
        print(f"  {i+1}. {file.name}")
    
    if len(all_files) > 5:
        print(f"  ... –∏ –µ—â–µ {len(all_files) - 5} –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤")
    
    return True

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("ü§ñ –ë—ã—Å—Ç—Ä–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è –±–∞–∑—ã –∑–Ω–∞–Ω–∏–π")
    print("=" * 50)
    
    try:
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã —Ñ–∞–π–ª–æ–≤
        files_ok = check_files_structure()
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤
        docs_ok = check_documents_directory()
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–∞–∑—ã –∑–Ω–∞–Ω–∏–π
        if files_ok:
            kb_ok = check_knowledge_base_quick()
        else:
            kb_ok = False
        
        # –ò—Ç–æ–≥–æ–≤–∞—è –æ—Ü–µ–Ω–∫–∞
        print("\n" + "=" * 50)
        print("üìä –ò–¢–û–ì–û–í–ê–Ø –û–¶–ï–ù–ö–ê:")
        print(f"  üìÅ –§–∞–π–ª—ã: {'‚úÖ OK' if files_ok else '‚ùå –ü—Ä–æ–±–ª–µ–º—ã'}")
        print(f"  üìÑ –î–æ–∫—É–º–µ–Ω—Ç—ã: {'‚úÖ OK' if docs_ok else '‚ùå –ü—Ä–æ–±–ª–µ–º—ã'}")
        print(f"  üóÑÔ∏è –ë–∞–∑–∞ –∑–Ω–∞–Ω–∏–π: {'‚úÖ OK' if kb_ok else '‚ùå –ü—Ä–æ–±–ª–µ–º—ã'}")
        
        if files_ok and docs_ok and kb_ok:
            print("\nüéâ –í—Å–µ —Å–∏—Å—Ç–µ–º—ã —Ä–∞–±–æ—Ç–∞—é—Ç –æ—Ç–ª–∏—á–Ω–æ!")
            print("üí° –ú–æ–∂–µ—Ç–µ –∑–∞–ø—É—Å–∫–∞—Ç—å —á–∞—Ç-–±–æ—Ç–∞: python main.py")
        else:
            print("\n‚ö†Ô∏è –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –ø—Ä–æ–±–ª–µ–º—ã")
            print("üí° –ó–∞–ø—É—Å—Ç–∏—Ç–µ: python quick_update_knowledge_base.py")
        
    except Exception as e:
        print(f"‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: {e}")
        
    print("\n" + "=" * 50)

if __name__ == "__main__":
    main() 