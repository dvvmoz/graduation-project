#!/bin/bash

# –°–∫—Ä–∏–ø—Ç —Ä–µ–∑–µ—Ä–≤–Ω–æ–≥–æ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è –¥–ª—è –Æ—Ä–ü–æ–º–æ—â–Ω–∏–∫–∞
# –°–æ–∑–¥–∞–µ—Ç –±—ç–∫–∞–ø—ã –±–∞–∑—ã –∑–Ω–∞–Ω–∏–π, ML-–º–æ–¥–µ–ª–µ–π –∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–π

set -euo pipefail

# –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
BACKUP_DIR="/backup/local"
TIMESTAMP=$(date +%Y%m%d_%H%M%S)
RETENTION_DAYS=${BACKUP_RETENTION_DAYS:-30}

# –§—É–Ω–∫—Ü–∏–∏ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
log() {
    echo "[$(date +'%Y-%m-%d %H:%M:%S')] $1"
}

error() {
    echo "[ERROR] $1" >&2
    exit 1
}

# –°–æ–∑–¥–∞–Ω–∏–µ –±—ç–∫–∞–ø–∞ –±–∞–∑—ã –∑–Ω–∞–Ω–∏–π
backup_database() {
    log "–°–æ–∑–¥–∞–µ–º –±—ç–∫–∞–ø –±–∞–∑—ã –∑–Ω–∞–Ω–∏–π..."
    
    if [[ -d "/backup/db" ]]; then
        tar -czf "$BACKUP_DIR/db_$TIMESTAMP.tar.gz" -C /backup db/
        log "‚úÖ –ë—ç–∫–∞–ø –±–∞–∑—ã –∑–Ω–∞–Ω–∏–π —Å–æ–∑–¥–∞–Ω: db_$TIMESTAMP.tar.gz"
    else
        log "‚ö†Ô∏è –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –±–∞–∑—ã –∑–Ω–∞–Ω–∏–π –Ω–µ –Ω–∞–π–¥–µ–Ω–∞"
    fi
}

# –°–æ–∑–¥–∞–Ω–∏–µ –±—ç–∫–∞–ø–∞ ML-–º–æ–¥–µ–ª–µ–π
backup_models() {
    log "–°–æ–∑–¥–∞–µ–º –±—ç–∫–∞–ø ML-–º–æ–¥–µ–ª–µ–π..."
    
    if [[ -d "/backup/models" ]]; then
        tar -czf "$BACKUP_DIR/models_$TIMESTAMP.tar.gz" -C /backup models/
        log "‚úÖ –ë—ç–∫–∞–ø ML-–º–æ–¥–µ–ª–µ–π —Å–æ–∑–¥–∞–Ω: models_$TIMESTAMP.tar.gz"
    else
        log "‚ö†Ô∏è –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è ML-–º–æ–¥–µ–ª–µ–π –Ω–µ –Ω–∞–π–¥–µ–Ω–∞"
    fi
}

# –°–æ–∑–¥–∞–Ω–∏–µ –±—ç–∫–∞–ø–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–π
backup_configs() {
    log "–°–æ–∑–¥–∞–µ–º –±—ç–∫–∞–ø –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–π..."
    
    # –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –¥–ª—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–π
    CONFIG_TEMP="/tmp/config_backup_$TIMESTAMP"
    mkdir -p "$CONFIG_TEMP"
    
    # –ö–æ–ø–∏—Ä—É–µ–º –≤–∞–∂–Ω—ã–µ —Ñ–∞–π–ª—ã (–±–µ–∑ —Å–µ–∫—Ä–µ—Ç–æ–≤)
    if [[ -f "/.env.prod" ]]; then
        # –°–æ–∑–¥–∞–µ–º –≤–µ—Ä—Å–∏—é –±–µ–∑ —Å–µ–∫—Ä–µ—Ç–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
        grep -v -E "(TOKEN|KEY|PASSWORD)" /.env.prod > "$CONFIG_TEMP/env.prod.template" || true
    fi
    
    # –î–æ–±–∞–≤–ª—è–µ–º –¥—Ä—É–≥–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã
    cp -r /app/nginx/nginx.conf "$CONFIG_TEMP/" 2>/dev/null || true
    cp -r /app/monitoring/ "$CONFIG_TEMP/" 2>/dev/null || true
    
    tar -czf "$BACKUP_DIR/configs_$TIMESTAMP.tar.gz" -C /tmp "config_backup_$TIMESTAMP"
    rm -rf "$CONFIG_TEMP"
    
    log "‚úÖ –ë—ç–∫–∞–ø –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–π —Å–æ–∑–¥–∞–Ω: configs_$TIMESTAMP.tar.gz"
}

# –ó–∞–≥—Ä—É–∑–∫–∞ –≤ S3 (–µ—Å–ª–∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–æ)
upload_to_s3() {
    if [[ -n "${S3_BUCKET:-}" ]] && [[ -n "${AWS_ACCESS_KEY_ID:-}" ]]; then
        log "–ó–∞–≥—Ä—É–∂–∞–µ–º –±—ç–∫–∞–ø—ã –≤ S3..."
        
        for file in "$BACKUP_DIR"/*_$TIMESTAMP.tar.gz; do
            if [[ -f "$file" ]]; then
                aws s3 cp "$file" "s3://$S3_BUCKET/backups/$(basename "$file")"
                log "‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω –≤ S3: $(basename "$file")"
            fi
        done
    else
        log "‚ÑπÔ∏è S3 –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É –≤ –æ–±–ª–∞–∫–æ"
    fi
}

# –û—á–∏—Å—Ç–∫–∞ —Å—Ç–∞—Ä—ã—Ö –±—ç–∫–∞–ø–æ–≤
cleanup_old_backups() {
    log "–û—á–∏—â–∞–µ–º —Å—Ç–∞—Ä—ã–µ –±—ç–∫–∞–ø—ã (—Å—Ç–∞—Ä—à–µ $RETENTION_DAYS –¥–Ω–µ–π)..."
    
    # –õ–æ–∫–∞–ª—å–Ω—ã–µ –±—ç–∫–∞–ø—ã
    find "$BACKUP_DIR" -name "*.tar.gz" -mtime +$RETENTION_DAYS -delete
    
    # S3 –±—ç–∫–∞–ø—ã (–µ—Å–ª–∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–æ)
    if [[ -n "${S3_BUCKET:-}" ]] && [[ -n "${AWS_ACCESS_KEY_ID:-}" ]]; then
        # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ —Å—Ç–∞—Ä—ã—Ö —Ñ–∞–π–ª–æ–≤ –≤ S3 –∏ —É–¥–∞–ª—è–µ–º –∏—Ö
        aws s3 ls "s3://$S3_BUCKET/backups/" --recursive | \
        while read -r line; do
            file_date=$(echo $line | awk '{print $1 " " $2}')
            file_name=$(echo $line | awk '{print $4}')
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–æ–∑—Ä–∞—Å—Ç —Ñ–∞–π–ª–∞
            if [[ $(date -d "$file_date" +%s) -lt $(date -d "$RETENTION_DAYS days ago" +%s) ]]; then
                aws s3 rm "s3://$S3_BUCKET/$file_name"
                log "üóëÔ∏è –£–¥–∞–ª–µ–Ω —Å—Ç–∞—Ä—ã–π –±—ç–∫–∞–ø –∏–∑ S3: $file_name"
            fi
        done
    fi
    
    log "‚úÖ –û—á–∏—Å—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞"
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–∑–º–µ—Ä–∞ –±—ç–∫–∞–ø–æ–≤
check_backup_size() {
    log "–ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑–º–µ—Ä —Å–æ–∑–¥–∞–Ω–Ω—ã—Ö –±—ç–∫–∞–ø–æ–≤..."
    
    total_size=0
    for file in "$BACKUP_DIR"/*_$TIMESTAMP.tar.gz; do
        if [[ -f "$file" ]]; then
            size=$(stat -f%z "$file" 2>/dev/null || stat -c%s "$file" 2>/dev/null || echo 0)
            size_mb=$((size / 1024 / 1024))
            log "üìÅ $(basename "$file"): ${size_mb}MB"
            total_size=$((total_size + size))
        fi
    done
    
    total_mb=$((total_size / 1024 / 1024))
    log "üìä –û–±—â–∏–π —Ä–∞–∑–º–µ—Ä –±—ç–∫–∞–ø–æ–≤: ${total_mb}MB"
}

# –û—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
send_notification() {
    if [[ -n "${NOTIFICATION_WEBHOOK:-}" ]]; then
        curl -X POST "$NOTIFICATION_WEBHOOK" \
            -H "Content-Type: application/json" \
            -d "{\"text\":\"‚úÖ –ë—ç–∫–∞–ø –Æ—Ä–ü–æ–º–æ—â–Ω–∏–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω: $TIMESTAMP\"}" \
            || log "‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ"
    fi
}

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
main() {
    log "üîÑ –ù–∞—á–∏–Ω–∞–µ–º –ø—Ä–æ—Ü–µ–¥—É—Ä—É —Ä–µ–∑–µ—Ä–≤–Ω–æ–≥–æ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è..."
    
    # –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –¥–ª—è –±—ç–∫–∞–ø–æ–≤
    mkdir -p "$BACKUP_DIR"
    
    # –í—ã–ø–æ–ª–Ω—è–µ–º –±—ç–∫–∞–ø
    backup_database
    backup_models
    backup_configs
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑–º–µ—Ä
    check_backup_size
    
    # –ó–∞–≥—Ä—É–∂–∞–µ–º –≤ –æ–±–ª–∞–∫–æ
    upload_to_s3
    
    # –û—á–∏—â–∞–µ–º —Å—Ç–∞—Ä—ã–µ –±—ç–∫–∞–ø—ã
    cleanup_old_backups
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
    send_notification
    
    log "‚úÖ –†–µ–∑–µ—Ä–≤–Ω–æ–µ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!"
}

# –ó–∞–ø—É—Å–∫ —Å –æ–±—Ä–∞–±–æ—Ç–∫–æ–π –æ—à–∏–±–æ–∫
trap 'error "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –≤ —Å—Ç—Ä–æ–∫–µ $LINENO"' ERR

main "$@" 