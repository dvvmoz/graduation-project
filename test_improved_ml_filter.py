#!/usr/bin/env python3
"""
–¢–µ—Å—Ç —É–ª—É—á—à–µ–Ω–Ω–æ–≥–æ ML-—Ñ–∏–ª—å—Ç—Ä–∞ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏–∏ –∫–æ—Ä–æ—Ç–∫–∏—Ö —é—Ä–∏–¥–∏—á–µ—Å–∫–∏—Ö –≤–æ–ø—Ä–æ—Å–æ–≤.
"""

import sys
from pathlib import Path
sys.path.append(str(Path(__file__).parent))

from modules.ml_question_filter import is_legal_question_ml

def test_ml_filter():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç ML-—Ñ–∏–ª—å—Ç—Ä –Ω–∞ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —Ç–∏–ø–∞—Ö –≤–æ–ø—Ä–æ—Å–æ–≤."""
    
    print("üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —É–ª—É—á—à–µ–Ω–Ω–æ–≥–æ ML-—Ñ–∏–ª—å—Ç—Ä–∞...")
    print("=" * 60)
    
    # –¢–µ—Å—Ç–æ–≤—ã–µ –≤–æ–ø—Ä–æ—Å—ã
    test_cases = [
        # –ö–æ—Ä–æ—Ç–∫–∏–µ —é—Ä–∏–¥–∏—á–µ—Å–∫–∏–µ –≤–æ–ø—Ä–æ—Å—ã (–¥–æ–ª–∂–Ω—ã –ø—Ä–æ–π—Ç–∏)
        ("–æ—Ç–∫—Ä—ã—Ç–∏–µ –∏–ø", True, "–û—Å–Ω–æ–≤–Ω–∞—è –ø—Ä–æ–±–ª–µ–º–∞"),
        ("—Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –∏–ø", True, "–í–∞—Ä–∏–∞–Ω—Ç –æ—Å–Ω–æ–≤–Ω–æ–π –ø—Ä–æ–±–ª–µ–º—ã"),
        ("–∫–∞–∫ –æ—Ç–∫—Ä—ã—Ç—å –∏–ø", True, "–†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–π –≤–∞—Ä–∏–∞–Ω—Ç"),
        ("–¥–æ–∫—É–º–µ–Ω—Ç—ã –¥–ª—è –∏–ø", True, "–°–≤—è–∑–∞–Ω–Ω—ã–π –≤–æ–ø—Ä–æ—Å"),
        ("–Ω–∞–ª–æ–≥–∏ –∏–ø", True, "–î—Ä—É–≥–æ–π –∞—Å–ø–µ–∫—Ç –ò–ü"),
        ("—Ä–∞–∑–≤–æ–¥ –¥–æ–∫—É–º–µ–Ω—Ç—ã", True, "–î—Ä—É–≥–∞—è —Ç–µ–º–∞"),
        ("—Ç—Ä—É–¥–æ–≤–æ–π –¥–æ–≥–æ–≤–æ—Ä", True, "–¢—Ä—É–¥–æ–≤–æ–µ –ø—Ä–∞–≤–æ"),
        ("—à—Ç—Ä–∞—Ñ –≥–∞–∏", True, "–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω–æ–µ –ø—Ä–∞–≤–æ"),
        ("–∞–ª–∏–º–µ–Ω—Ç—ã —Ä–∞–∑–º–µ—Ä", True, "–°–µ–º–µ–π–Ω–æ–µ –ø—Ä–∞–≤–æ"),
        ("–∂–∞–ª–æ–±–∞ –≤ —Å—É–¥", True, "–ü—Ä–æ—Ü–µ—Å—Å—É–∞–ª—å–Ω–æ–µ –ø—Ä–∞–≤–æ"),
        
        # –ö–æ—Ä–æ—Ç–∫–∏–µ –Ω–µ—é—Ä–∏–¥–∏—á–µ—Å–∫–∏–µ –≤–æ–ø—Ä–æ—Å—ã (–¥–æ–ª–∂–Ω—ã –Ω–µ –ø—Ä–æ–π—Ç–∏)
        ("–ø—Ä–∏–≥–æ—Ç–æ–≤–∏—Ç—å –µ–¥—É", False, "–ë—ã—Ç–æ–≤–æ–π –≤–æ–ø—Ä–æ—Å"),
        ("–∫—É–ø–∏—Ç—å —Ç–µ–ª–µ—Ñ–æ–Ω", False, "–ü–æ–∫—É–ø–∫–∞ —Ç–æ–≤–∞—Ä–∞"),
        ("–ø–æ–≥–æ–¥–∞ –∑–∞–≤—Ç—Ä–∞", False, "–ü—Ä–æ–≥–Ω–æ–∑ –ø–æ–≥–æ–¥—ã"),
        ("—É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∏–≥—Ä—É", False, "IT –≤–æ–ø—Ä–æ—Å"),
        ("–∏–∑—É—á–∏—Ç—å —è–∑—ã–∫", False, "–û–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ"),
        
        # –î–ª–∏–Ω–Ω—ã–µ —é—Ä–∏–¥–∏—á–µ—Å–∫–∏–µ –≤–æ–ø—Ä–æ—Å—ã (–¥–æ–ª–∂–Ω—ã –ø—Ä–æ–π—Ç–∏)
        ("–ö–∞–∫ –ø–æ–¥–∞—Ç—å –∏—Å–∫ –≤ —Å—É–¥ –≤ –ë–µ–ª–∞—Ä—É—Å–∏?", True, "–î–ª–∏–Ω–Ω—ã–π —é—Ä–∏–¥–∏—á–µ—Å–∫–∏–π"),
        ("–ö–∞–∫–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã –Ω—É–∂–Ω—ã –¥–ª—è —Ä–∞–∑–≤–æ–¥–∞ –≤ –†–ë?", True, "–î–ª–∏–Ω–Ω—ã–π —é—Ä–∏–¥–∏—á–µ—Å–∫–∏–π"),
        
        # –î–ª–∏–Ω–Ω—ã–µ –Ω–µ—é—Ä–∏–¥–∏—á–µ—Å–∫–∏–µ –≤–æ–ø—Ä–æ—Å—ã (–¥–æ–ª–∂–Ω—ã –Ω–µ –ø—Ä–æ–π—Ç–∏)
        ("–ö–∞–∫ –ø—Ä–∏–≥–æ—Ç–æ–≤–∏—Ç—å –≤–∫—É—Å–Ω—ã–π –±–æ—Ä—â —Å –º—è—Å–æ–º?", False, "–î–ª–∏–Ω–Ω—ã–π –Ω–µ—é—Ä–∏–¥–∏—á–µ—Å–∫–∏–π"),
        ("–ì–¥–µ –º–æ–∂–Ω–æ —Å–∫–∞—á–∞—Ç—å —Ö–æ—Ä–æ—à–∏–µ —Ñ–∏–ª—å–º—ã?", False, "–î–ª–∏–Ω–Ω—ã–π –Ω–µ—é—Ä–∏–¥–∏—á–µ—Å–∫–∏–π"),
    ]
    
    correct_predictions = 0
    total_predictions = 0
    
    for question, expected, description in test_cases:
        is_legal, confidence, explanation = is_legal_question_ml(question)
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏—è
        is_correct = is_legal == expected
        if is_correct:
            correct_predictions += 1
        total_predictions += 1
        
        # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        status = "‚úÖ –í–ï–†–ù–û" if is_correct else "‚ùå –û–®–ò–ë–ö–ê"
        expected_text = "–î–ê" if expected else "–ù–ï–¢"
        actual_text = "–î–ê" if is_legal else "–ù–ï–¢"
        
        print(f"{status} | {question:25} | –û–∂–∏–¥–∞–ª–æ—Å—å: {expected_text:3} | –ü–æ–ª—É—á–µ–Ω–æ: {actual_text:3} | –£–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å: {confidence:.3f}")
        print(f"        –û–ø–∏—Å–∞–Ω–∏–µ: {description}")
        print(f"        –û–±—ä—è—Å–Ω–µ–Ω–∏–µ: {explanation}")
        print()
    
    # –ò—Ç–æ–≥–æ–≤–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
    accuracy = correct_predictions / total_predictions
    print("=" * 60)
    print(f"üìä –†–ï–ó–£–õ–¨–¢–ê–¢–´ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø:")
    print(f"   –ü—Ä–∞–≤–∏–ª—å–Ω—ã—Ö –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–π: {correct_predictions}/{total_predictions}")
    print(f"   –¢–æ—á–Ω–æ—Å—Ç—å: {accuracy:.1%}")
    print()
    
    if accuracy >= 0.8:
        print("üéâ –û–¢–õ–ò–ß–ù–û! –§–∏–ª—å—Ç—Ä —Ä–∞–±–æ—Ç–∞–µ—Ç —Ö–æ—Ä–æ—à–æ!")
    elif accuracy >= 0.6:
        print("‚ö†Ô∏è  –°–†–ï–î–ù–ï. –§–∏–ª—å—Ç—Ä –Ω—É–∂–¥–∞–µ—Ç—Å—è –≤ —É–ª—É—á—à–µ–Ω–∏–∏.")
    else:
        print("‚ùå –ü–õ–û–•–û. –§–∏–ª—å—Ç—Ä —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–µ—É–¥–æ–≤–ª–µ—Ç–≤–æ—Ä–∏—Ç–µ–ª—å–Ω–æ.")
    
    return accuracy

if __name__ == "__main__":
    test_ml_filter() 